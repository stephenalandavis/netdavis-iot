---
- name: Ensure the SSH daemon is running
  ansible.builtin.service:
    name: ssh
    state: "{{ security_sshd_state }}"
    enabled: "{{ security_sshd_enabled }}"

- name: "Create user SSH directory"
  ansible.builtin.file:
    state: directory
    dest: "/home/{{ security_localadmin_username }}/.ssh"
    owner: "{{ security_localadmin_username }}"
    group: "{{ security_localadmin_username }}"
    mode: u=rwx,g=,o=

- name: Authorize the SSH key if not already authorized
  ansible.posix.authorized_key:
    user: "{{ security_localadmin_username }}"
    key: "{{ security_ssh_public_key }}"
  notify: Restart ssh

# This task provides a sshd config with sane organization of settings.
- name: Create the SSH daemon config file using a template
  ansible.builtin.template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    backup: true
    validate: 'sshd -T -f %s'
  notify: Restart ssh

- name: Verify if the process ID file for the SSH daemon exists
  ansible.builtin.stat:
    path: "{{ security_ssh_pid_file }}"
  register: ssh_pid_result
  when: security_ssh_pid_file | length > 0
  notify: Restart ssh

- name: Add HostKey configuration
  ansible.builtin.blockinfile:
    dest: /etc/ssh/sshd_config
    block: |
      {% for item in security_ssh_host_keys %}
      HostKey {{ item }}
      {% endfor %}
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR HostKey"
    insertafter: '^MACs'
    mode: u=rw,g=r,o=r
    validate: 'sshd -T -f %s'
  when: security_ssh_host_keys | length > 0
  notify: Restart ssh

- name: Ensure SSH group access is configured
  when: security_ssh_allowed_groups | length > 0
  notify: Restart ssh
  block:
    - name: Ensure specified SSH groups exist
      ansible.builtin.group:
        name: "{{ item }}"
        state: present
      loop: "{{ security_ssh_allowed_groups }}"

    - name: Ensure local admin user is added to SSH allowed groups
      ansible.builtin.user:
        name: "{{ security_localadmin_username }}"
        groups: "{{ item }}"
        append: true
      loop: "{{ security_ssh_allowed_groups }}"

    - name: Enable group specific terminal access to SSH
      ansible.builtin.blockinfile:
        dest: /etc/ssh/sshd_config
        create: true
        block: |
          # Apply specific settings for users belonging to allowed SSH groups.
          Match Group {{ security_ssh_allowed_groups | join(' ') }}
              PermitTTY yes
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR Match Group"
        insertafter: "^# === Conditional Configuration ===$"
        mode: u=rw,g=r,o=r
        validate: 'sshd -T -f %s'

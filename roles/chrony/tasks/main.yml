---
- name: Stop and disable systemd-timesyncd so that it doesn't conflict with Chrony daemon
  ansible.builtin.service:
    name: systemd-timesyncd
    state: stopped
    enabled: false
  when:
    - '"systemd-timesyncd.service" in services'
    - services["systemd-timesyncd.service"]["status"] != "not-found"

- name: Install chrony
  ansible.builtin.package:
    name: chrony
    state: present

- name: Ensure tzdata package is installed
  ansible.builtin.package:
    name: tzdata
    state: present
  when: ansible_system == "Linux"

- name: Set timezone.
  community.general.timezone:
    name: "{{ chrony_timezone }}"
  notify: Restart cron

- name: Create a system user for Chrony
  ansible.builtin.user:
    name: "{{ chrony_user }}"
    system: true
    home: "/var/lib/chrony"
    shell: /usr/sbin/nologin
    create_home: true
  when: chrony_user != 'root'

- name: Copy the Chrony keyfile to the server
  ansible.builtin.template:
    src: chrony.keys.j2
    dest: /etc/chrony.keys
    owner: "{{ chrony_user }}"
    group: "{{ chrony_group }}"
    mode: u=w,g=r,o=
  when:
    - chrony_keyfile_enabled | bool
    - chrony_host_role == 'server'

- name: Copy Chrony key file from server to the client
  ansible.posix.synchronize:
    src: /etc/chrony.keys
    dest: /etc/chrony.keys
    mode: pull
  delegate_to: "{{ chrony_server }}"
  when:
    - chrony_keyfile_enabled | bool
    - chrony_host_role == 'client'
    - chrony_server | length > 0

- name: "Create the Chrony config for"
  ansible.builtin.template:
    src: chrony.conf.j2
    dest: /etc/chrony/chrony.conf
    owner: "{{ chrony_user }}"
    group: "{{ chrony_group }}"
    mode: u=w,g=r,o=
  notify: Restart chrony
- name: "Chrony host role: {{ chrony_host_role }}"

- name: Check for hardware timestamping support
  ansible.builtin.command: "ethtool -T {{ chrony_network_interface }}"
  register: chrony_ethtool_output
  ignore_errors: true
  changed_when: false

- name: Set hardware timestamping flag based on support
  ansible.builtin.set_fact:
    chrony_hardware_timestamping_supported: "{{ 'Hardware Transmit Timestamp Modes' in chrony_ethtool_output.stdout }}"

- name: Debug hardware timestamping support
  ansible.builtin.debug:
    msg: "Hardware timestamping supported: {{ chrony_hardware_timestamping_supported }}"

- name: Ensure hardware timestamping is enabled globally in Chrony
  ansible.builtin.lineinfile:
    path: /etc/chrony/chrony.conf
    regexp: '^(#)?(hwtimestamp \*)$'
    line: '\1'
    backrefs: true
  notify:
    - Restart chrony
  when: chrony_hardware_timestamping_supported

- name: Start and enable the Chrony daemon
  ansible.builtin.service:
    name: chronyd
    state: started
    enabled: true

- name: Validate Chrony synchronization status
  ansible.builtin.command: chronyc tracking
  register: chrony_status
  changed_when: false
  failed_when: "'Reference ID' not in chrony_status.stdout"
  when: ansible_os_family == 'Debian'
  become: true
